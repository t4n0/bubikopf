#ifndef BITBOARD_BOARD_H
#define BITBOARD_BOARD_H

#include "bitboard/basic_type_declarations.h"

#include <cstdint>
#include <limits>

namespace Chess
{

constexpr Bitboard BOARD_ZEROS = 0;
constexpr Bitboard BOARD_ONE = 1;
constexpr Bitboard BOARD_ONES = std::numeric_limits<Bitboard>::max();

constexpr std::size_t BOARD_IDX_EXTRAS = 0;
constexpr std::size_t BOARD_IDX_BLACK = 1;
constexpr std::size_t BOARD_IDX_WHITE = 9;
constexpr std::size_t BOARD_IDX_UNUSED1 = 8;
constexpr std::size_t BOARD_IDX_UNUSED2 = 16;
constexpr std::size_t BOARD_IDX_TOGGLE_SIDE = BOARD_IDX_WHITE - BOARD_IDX_BLACK;

constexpr Bitboard BOARD_MASK_STATIC_PLIES = 0b00000000'00000000'00000000'00000000'00000000'00000000'00000000'00111111;
constexpr Bitboard BOARD_MASK_EN_PASSANT = 0b00000000'00000000'00000000'00000000'00000000'00000000'00111111'00000000;
constexpr Bitboard BOARD_MASK_CASTLING = 0b00000000'00000000'00000000'00000000'00000000'00001111'00000000'00000000;
constexpr Bitboard BOARD_MASK_MOVES = 0b11111111'00000000'00000000'00000000'00000000'00000000'00000000'00000000;
constexpr Bitboard BOARD_MASK_UNUSED = 0b00000000'11111111'11111111'11111111'11111111'11110000'11000000'11000000;

constexpr Bitboard BOARD_VALUE_ADD_MOVE = 0b00000001'00000000'00000000'00000000'00000000'00000000'00000000'00000000;

// current castling rights
constexpr Bitboard BOARD_VALUE_CASTLING_WHITE_KINGSIDE =
    0b00000000'00000000'00000000'00000000'00000000'00001000'00000000'00000000;
constexpr Bitboard BOARD_VALUE_CASTLING_WHITE_QUEENSIDE =
    0b00000000'00000000'00000000'00000000'00000000'00000100'00000000'00000000;
constexpr Bitboard BOARD_VALUE_CASTLING_BLACK_KINGSIDE =
    0b00000000'00000000'00000000'00000000'00000000'00000010'00000000'00000000;
constexpr Bitboard BOARD_VALUE_CASTLING_BLACK_QUEENSIDE =
    0b00000000'00000000'00000000'00000000'00000000'00000001'00000000'00000000;

// castling occured on last move, regardless of side
constexpr Bitboard BOARD_VALUE_KINGSIDE_CASTLING_ON_LAST_MOVE =
    0b00000000'00000000'00000000'00000000'00000000'00100000'00000000'00000000;
constexpr Bitboard BOARD_VALUE_QUEENSIDE_CASTLING_ON_LAST_MOVE =
    0b00000000'00000000'00000000'00000000'00000000'00010000'00000000'00000000;

constexpr int BOARD_SHIFT_EN_PASSANT = 8;
constexpr int BOARD_SHIFT_CASTLING = 16;
constexpr int BOARD_SHIFT_MOVES = 56;

}  // namespace Chess

#endif
